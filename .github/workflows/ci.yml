# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['1.20']

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      # postgres:
      #   # Docker Hub image
      #   image: postgres
      #   # Provide the password for postgres
      #   env:
      #     POSTGRES_DB: db_luizalabs
      #     POSTGRES_USER: userluizalabs
      #     POSTGRES_PASSWORD: luizaLABS@123
      #   # Set health checks to wait until postgres has started
      #   options: >-
      #     --health-cmd pg_isready
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5
      #   ports:
      #     # Maps tcp port 5432 on service container to the host
      #     - 5432:5432

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.node-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.node-version }}

    # - name: Install golang-migrate
    #   run: |
    #     curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
    #     sudo mv migrate.linux-amd64 /usr/bin/migrate
    #     which migrate

    # - name: Run migrations
    #   run: make migrate-up

    - name: Test
      run: make go-test

    - name: Build
      run: go build -v ./...
